<ResourceDictionary xmlns:UserControls="clr-namespace:MS.IoT.Simulator.WPF.UserControls"  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:resx="clr-namespace:MS.IoT.Simulator.WPF.Properties"
                    xmlns:vm="clr-namespace:MS.IoT.Simulator.WPF.ViewModels"
                    xmlns:m="clr-namespace:MS.IoT.Domain.Model;assembly=MS.IoT.Domain"
                    xmlns:helpers="clr-namespace:MS.IoT.Simulator.WPF.Helpers"
                    xmlns:gif="http://wpfanimatedgif.codeplex.com"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:local="clr-namespace:MS.IoT.Simulator.WPF">
    <DataTemplate DataType="{x:Type vm:PreviewTemplateViewModel}" >
        <DataTemplate.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <helpers:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        </DataTemplate.Resources>
		<Grid>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Loaded">
					<i:InvokeCommandAction Command="{Binding Initialize}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
            
			<!-- Return button -->
            <Border Style="{StaticResource btnLink}" Width="100">
                <StackPanel Grid.ColumnSpan="3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ChooseTemplateCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Source="/Resources/back-button.png" Width="32"/>
                    <Label Content="{x:Static resx:Resources.BackButton}"/>
                </StackPanel>
            </Border>


            <!-- Left side - chip connection -->
            <Label Grid.Row="1" Grid.Column="0" Content="{x:Static resx:Resources.PreviewTemplateChipStatusTitle}" Style="{StaticResource textTitle}"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static resx:Resources.PreviewTemplateChipStatusDescription}" Style="{StaticResource textDescription}"></TextBlock>
            <StackPanel Grid.Row="3" Grid.Column="0">
                <Label Style="{StaticResource textField}" Content="{x:Static resx:Resources.PreviewTemplateSelectDongle}"></Label>
                <ComboBox IsEditable="False" ItemsSource="{Binding COMDevices}" HorizontalAlignment="Left" DisplayMemberPath="Name" Width="400" Padding="5" Margin="0,0,0,10" SelectedItem="{Binding SelectedCOMDevice}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding DeviceChanged}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <StackPanel Orientation="Horizontal" Margin="0,10">
                    <Image Grid.Row="3" Grid.Column="2" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="48" gif:ImageBehavior.AnimatedSource="/Resources/loading-small.gif" Visibility="{Binding IsCheckingStatus, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Image Source="/Resources/toggle-connected.png" Visibility="{Binding ReadyToSimulate, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Image Source="/Resources/toggle-disconnected.png" Visibility="{Binding CheckError, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Label Content="{x:Static resx:Resources.PreviewTemplateChipStatusConnected}" Style="{StaticResource textField}" Margin="10,0,0,0" Foreground="Green" Padding="0" VerticalAlignment="Center" Visibility="{Binding ReadyToSimulate, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Label Content="{x:Static resx:Resources.PreviewTemplateChipStatusDisconnected}" Style="{StaticResource textField}" Margin="10,0,0,0" Foreground="Red" Padding="0" VerticalAlignment="Center" Visibility="{Binding CheckError, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
                <TextBlock Text="{Binding TextBlockConsole}" LineHeight="20" Style="{StaticResource textErrorBlock}" Visibility="{Binding CheckError, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
            <Button Grid.Row="4" Grid.Column="0" Content="{x:Static resx:Resources.PreviewTemplateRetryButton}" HorizontalAlignment="Left" Margin="0,10,0,10" Command="{Binding RetryCheck}" HorizontalContentAlignment="Center" Style="{StaticResource btnBlue}" Width="150"></Button>

            <!-- Right side - Template preview & simulate -->
            <Label Grid.Row="1" Grid.Column="2" Content="{x:Static resx:Resources.PreviewTemplateDataPreviewTitle}" Style="{StaticResource textTitle}"/>
            <TextBlock Grid.Row="2" Grid.Column="2" Text="{x:Static resx:Resources.PreviewTemplateDataPreviewDescription}" Style="{StaticResource textDescription}"></TextBlock>
            <Image Grid.Row="3" Grid.Column="2" Margin="0,50" HorizontalAlignment="Center" VerticalAlignment="Top" Width="96" gif:ImageBehavior.AnimatedSource="/Resources/loading-large.gif" Visibility="{Binding Initialize.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Label Grid.Row="3" Grid.Column="2" Content="{Binding Initialize.Execution.ErrorMessage}" Visibility="{Binding LoadTemplates.Execution.IsFaulted, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource textError}" />
            <UserControls:JsonDataGrid Grid.Row="3" Grid.Column="2" DataSource="{Binding TemplatePacket}" Visibility="{Binding Initialize.Execution.Result, Converter={StaticResource BooleanToVisibilityConverter}}"></UserControls:JsonDataGrid>
            <Button Grid.Row="4" Grid.Column="2" Content="{x:Static resx:Resources.PreviewTemplateSimulateButton}" HorizontalAlignment="Left" Margin="0,10,0,10" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SimulateTemplateCommand}" CommandParameter="{Binding Template.Id}" HorizontalContentAlignment="Center" Style="{StaticResource btnBlue}" Width="150" IsEnabled="{Binding ReadyToSimulate}"></Button>
        </Grid>
	</DataTemplate>
</ResourceDictionary>
