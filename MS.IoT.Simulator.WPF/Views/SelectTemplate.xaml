<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:resx="clr-namespace:MS.IoT.Simulator.WPF.Properties"
                    xmlns:vm="clr-namespace:MS.IoT.Simulator.WPF.ViewModels"
                    xmlns:helpers="clr-namespace:MS.IoT.Simulator.WPF.Helpers"
                    xmlns:gif="http://wpfanimatedgif.codeplex.com"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">
    <DataTemplate DataType="{x:Type vm:SelectTemplateViewModel}" >
        <DataTemplate.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <helpers:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        </DataTemplate.Resources>
		<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
			<Grid>
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Loaded">
						<i:InvokeCommandAction Command="{Binding LoadTemplates}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Title and Description-->
                <Label Grid.Row="0" Grid.ColumnSpan="2" Content="{x:Static resx:Resources.ChooseTemplateTitle}" Style="{StaticResource textTitle}"/>
                <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Text="{x:Static resx:Resources.ChooseTemplateDescription}" Style="{StaticResource textDescription}" Width="990"/>
                <Label Grid.Row="2" Content="{x:Static resx:Resources.ChooseTemplateSelectSaveTemplateTitle}" Style="{StaticResource textTitle}" Margin="0,10,328,20" Width="419" Height="36"/>
                <StackPanel Grid.Row="2" Grid.Column="1">
                    <Button Style="{StaticResource btnBlue}" Command="{Binding LoadTemplates}" CommandParameter="refresh" Padding="10,10,10,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" RenderTransformOrigin="0.187,-1.01">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Resources/refresh-icon-small.png" Margin="0,0" Width="32" Height="24" RenderTransformOrigin="-1.4,0.38"/>
                            <TextBlock Text="{x:Static resx:Resources.SelectTemplateRefreshButton}" Margin="10,0" VerticalAlignment="Center" />
                        </StackPanel>
                    </Button>
                </StackPanel>
                <TextBlock Grid.Row="3" Grid.ColumnSpan="2" Text="{x:Static resx:Resources.ChooseTemplateSelectSaveTemplateDescription}" Style="{StaticResource textDescription}"></TextBlock>

                <!-- List of templates-->
                <Image Grid.Row="4" Grid.ColumnSpan="2" Margin="0,50" HorizontalAlignment="Center" VerticalAlignment="Top" Width="96" gif:ImageBehavior.AnimatedSource="/Resources/loading-large.gif" Visibility="{Binding LoadTemplates.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Label Grid.Row="4" Grid.ColumnSpan="2" Content="{Binding LoadTemplates.Execution.ErrorMessage}" Visibility="{Binding LoadTemplates.Execution.IsFaulted, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource textError}" />
                <ItemsControl Grid.Row="4" Grid.ColumnSpan="2" ItemsSource="{Binding LoadTemplates.Execution.Result}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Style="{StaticResource grdTemplate}">
                                <Label Content="{Binding Template.Name}"/>
                                <Image Source="{Binding PictureUrl}"/>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.PreviewTemplateCommand}" CommandParameter="{Binding Template.Id}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
		</ScrollViewer>
	</DataTemplate>
</ResourceDictionary>
